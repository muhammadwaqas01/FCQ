
Finite Capacity Queue Simulation
This project implements a Finite Capacity Queue using the FIFO (First-In, First-Out) scheduling discipline within the OMNeT++ simulation framework. The simulation models the behavior of an abstract FIFO queue system, managing message processing, resource allocation, and statistics recording.

Getting Started
To clone or run this Finite Capacity Queue simulation, you must first install OMNeT++.

Installation
Download OMNeT++ from the official website: OMNeT++ Downloads
For detailed installation instructions on your specific machine, please visit the OMNeT++ Documentation.
Components
AbstractFifo.cc
This file defines the behavior of an abstract FIFO queue system in the simulation environment. It is responsible for message processing, resource allocation, and statistics recording, including message wait times and resource occupation. It supports dynamic checking and adjustments based on message source and resource requirements.

AbstractFifo.h
This header file defines the AbstractFifo class, serving as an abstract base for a FIFO queue management system in simulations. It focuses on handling, servicing, and logging messages with functionalities for dynamic resource allocation and performance tracking.

Fifo.cc
Defines the Fifo class for managing FIFO queue operations, including initializing signal registration for message processing and drop metrics across 29 sources. It also manages the lifecycle events of message service.

Fifo.h
This header file extends the AbstractFifo class to implement a FIFO queue management system, specifically focusing on starting and ending the service of messages.

Fifo.ned
Defines a Fifo module in OMNeT++ with operation parameters and gates for message input/output. It includes monitoring for dropped messages.

Sink.cc
Registers signals for messages processed from two sources. Handles incoming messages by calculating their lifetime and emitting corresponding signals before deletion.

Sink.ned
Outlines a Sink module with parameters for visual representation and signals for tracking processed messages from two sources, along with an input gate.

Source.cc & Source1.cc
Both files implement a Source class that generates jobs with specific resource requirements and service times, scheduling them based on an interarrival time. Emits a signal every time a job is generated.

Source.ned & Source1.ned
Defines network components and their interactions for the Source modules, detailing the structure and function of the simulation's job generation.

omnetpp.ini
Provides the configuration parameters for the simulation, such as simulation time limit, arrival times, service times, etc.

Running the Simulation
After installing OMNeT++ and cloning this repository, navigate to the project directory and use the OMNeT++ IDE or command line tools to compile and run the simulation according to the provided omnetpp.ini configuration.

Contributing
Please read CONTRIBUTING.md for details on our code of conduct and the process for submitting pull requests to us.

License
This project is licensed under the MIT License - see the LICENSE.md file for details.

Acknowledgments
OMNeT++ community for providing the simulation framework and documentation.
Contributors and developers of this FIFO queue simulation project.